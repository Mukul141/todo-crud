    spring.application.name=TooDo
    spring.datasource.url=jdbc:postgresql://localhost:5332/todo_service
    spring.datasource.username=mukul141
    spring.datasource.password=password
    spring.datasource.driver-class-name=org.postgresql.Driver

    spring.jpa.hibernate.ddl-auto=update
    spring.jpa.properties.hibernate.format_sql=true
    spring.jpa.show-sql=true

    # Secret key for signing JSON Web Tokens (JWT)
    jwt.secret=7d49a7a58436b3303681a7199411f87532f831f2b874f874d154f874d58436b33

## =================================================================
## Bucket4j Rate Limiting Configuration
## =================================================================
#bucket4j.enabled=true
#
## This sets the filter's order to a high precedence, ensuring it runs BEFORE Spring Security.
#bucket4j.filter-order=1
#
## Define our filter for the todo-tasks API.
#bucket4j.filters[0].url=/api/todo-tasks(|/.*)
#
## The rate limit expression.
## We are now using the simplest possible key: the direct remote IP address.
## In Docker, this will be the constant IP of the network gateway, creating a single bucket for our tests.
#bucket4j.filters[0].rate-limits[0].expression=getRemoteAddr()
#
## The rate limit itself: 10 requests per minute
#bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
#bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
#bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes